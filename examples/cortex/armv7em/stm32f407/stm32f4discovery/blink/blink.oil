OIL_VERSION = "2.5";

IMPLEMENTATION trampoline {

    /* This fix the default STACKSIZE of tasks */
    TASK {
        UINT32 STACKSIZE = 300 ;
    } ;

    /* This fix the default STACKSIZE of ISRs */
    ISR {
        UINT32 STACKSIZE = 200 ;
    } ;
};

CPU blink {
  OS config {
    STATUS = EXTENDED;
    PRETASKHOOK = TRUE;
    POSTTASKHOOK = TRUE;
    PAINT_STACK = TRUE;
    PAINT_REGISTERS = TRUE;
    
    BUILD = TRUE {
      TRAMPOLINE_BASE_PATH = "../../../../../..";
      APP_SRC = "blink.c";
      APP_NAME = "blink_exe.axf";
      CFLAGS  = "-O0"; 
      LDFLAGS = "-Map=blink.map";
      COMPILER = "arm-none-eabi-gcc";
      ASSEMBLER = "arm-none-eabi-as";
      LINKER = "arm-none-eabi-ld";
      COPIER = "arm-none-eabi-objcopy";
      SYSTEM = PYTHON;
    };
    SYSTEM_CALL = TRUE;
    MEMMAP = TRUE {
      COMPILER = gcc;
      LINKER = gnu_ld { SCRIPT = "script.ld"; };
      ASSEMBLER = gnu_as;
      MEMORY_PROTECTION = FALSE;
    };
  };
  
    APPMODE std {};
    

    /********************TASKS*************************/
    TASK blink 
    {
      PRIORITY = 1;
      ACTIVATION = 1;
      SCHEDULE = NON;
      AUTOSTART = FALSE;
    };

    TASK blinkOne 
    {
      PRIORITY = 3;
      AUTOSTART = FALSE;
      ACTIVATION = 1;
      SCHEDULE = NON;
    };
       
    TASK blinkTow
    {
      AUTOSTART = FALSE;
      PRIORITY = 2;
      ACTIVATION = 1;
      SCHEDULE = NON;
    };
    /**************************************************/


    



    /*********************ALARMS*******************/
   ALARM blink_blink 
    {
      COUNTER = SystemCounter;
      ACTION = ACTIVATETASK 
      {
        TASK = blink;
      };
      AUTOSTART = TRUE 
      {
        APPMODE = std;
        ALARMTIME = 100;
        CYCLETIME = 100;
      };
    };
    /****************************************/


};

